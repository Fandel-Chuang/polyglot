// 完全全角符号游戏示例 - 文达 ｖ１．０．０
// 简单的文字 ＲＰＧ 游戏

》》 “输入输出流”
》》 “数学库”

＃ 职业类型 ｛
    战士，
    法师，
    弓箭手
｝

＠ 角色 ｛
    姓名： ？，
    职业： ？，
    生命值： ？，
    最大生命值： ？，
    攻击力： ？，
    等级： ？
｝

＆ 角色 ｛
    角色（姓名： ？， 职业： ？） ｛
        ＿．姓名 ＝ 姓名
        ＿．职业 ＝ 职业
        ＿．等级 ＝ 1

        // 根据职业设置属性
        （职业 ＝＝ 职业类型：：战士）？ ｛
            ＿．最大生命值 ＝ 120.0
            ＿．攻击力 ＝ 25.0
        ｝： （职业 ＝＝ 职业类型：：法师）？ ｛
            ＿．最大生命值 ＝ 80.0
            ＿．攻击力 ＝ 35.0
        ｝： ｛
            ＿．最大生命值 ＝ 100.0
            ＿．攻击力 ＝ 30.0
        ｝

        ＿．生命值 ＝ ＿．最大生命值
        打印（“创建角色： ” ＋ 姓名 ＋ “ （” ＋ 职业 ＋ “）”）
    ｝

    显示状态（） ｛
        打印（“⚔️ ═══════════════════”）
        打印（“角色： ” ＋ ＿．姓名）
        打印（“职业： ” ＋ ＿．职业）
        打印（“等级： ” ＋ ＿．等级）
        打印（“生命值： ” ＋ ＿．生命值 ＋ “ ／ ” ＋ ＿．最大生命值）
        打印（“攻击力： ” ＋ ＿．攻击力）
        打印（“═══════════════════”）
    ｝

    攻击（目标： ？） ｛
        伤害： ？ ＝ ＿．攻击力
        打印（“💥 ” ＋ ＿．姓名 ＋ “ 攻击 ” ＋ 目标．姓名 ＋ “！”）
        打印（“造成伤害： ” ＋ 伤害）
        目标．受到伤害（伤害）
    ｝

    受到伤害（伤害量： ？） ｛
        ＿．生命值 －＝ 伤害量
        打印（“💔 ” ＋ ＿．姓名 ＋ “ 受到 ” ＋ 伤害量 ＋ “ 点伤害”）

        （＿．生命值 ＜＝ 0.0）？ ｛
            ＿．生命值 ＝ 0.0
            打印（“💀 ” ＋ ＿．姓名 ＋ “ 被击败了！”）
        ｝
    ｝

    治疗（治疗量： ？） ｛
        ＿．生命值 ＋＝ 治疗量
        （＿．生命值 》 ＿．最大生命值）？ ｛
            ＿．生命值 ＝ ＿．最大生命值
        ｝
        打印（“💚 ” ＋ ＿．姓名 ＋ “ 恢复了 ” ＋ 治疗量 ＋ “ 点生命值”）
    ｝

    是否存活（） －》 ？ ｛
        《- ＿．生命值 》 0.0
    ｝
｝

主函数（） ｛
    打印（“🗡️ ⚔️ 🛡️ 文达 ＲＰＧ 游戏 ｖ１．０．０ 🛡️ ⚔️ 🗡️”）
    打印（“欢迎来到奇幻世界！”）
    打印（“”）

    // 创建角色
    英雄： ？ ＝ 角色（“亚瑟王”， 职业类型：：战士）
    法师： ？ ＝ 角色（“梅林”， 职业类型：：法师）
    射手： ？ ＝ 角色（“罗宾汉”， 职业类型：：弓箭手）

    打印（“”）
    打印（“🎭 ━━━ 角色介绍 ━━━”）
    英雄．显示状态（）
    法师．显示状态（）
    射手．显示状态（）

    打印（“”）
    打印（“⚔️ ━━━ 战斗开始 ━━━”）

    // 模拟战斗
    英雄．攻击（法师）
    法师．攻击（英雄）
    射手．攻击（法师）

    打印（“”）
    打印（“💊 ━━━ 治疗时间 ━━━”）
    英雄．治疗（15.0）
    法师．治疗（20.0）

    打印（“”）
    打印（“📊 ━━━ 战后状态 ━━━”）
    英雄．显示状态（）
    法师．显示状态（）
    射手．显示状态（）

    打印（“”）
    打印（“🎉 游戏演示完成！感谢体验文达编程语言！”）

    《- 0
｝